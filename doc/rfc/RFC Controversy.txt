RFC Controversy
---------------

This file lists all matters that I found to be unclear in their respective RFC
specifications. When the conpliance review finishes the contents of this file 
will be offered to the RFC editors to obtain clarification. Current handling of 
these issues by my implementation is displayed inside [ ... ].

* RFC 5228 (Sieve) : 5.1.  Test address
  "Implementations MUST restrict the address test to headers that
   contain addresses, but MUST include at least From, To, Cc, Bcc,
   Sender, Resent-From, and Resent-To, and it SHOULD include any other
   header that utilizes an "address-list" structured header body."
   
  - Will this cause a fatal script validation error, or are the disallowed 
    headers simply ignored? [fatal validation error]
  - Given the variables extension, sometimes the header names aren't known until
    runtime. If previous answer was to cause a fatal error, will this abort the
    script? [not checked (FIXME); will first be: ignore header]
    
* RFC 5228 (Sieve) : 5.4.  Test envelope
  "The "envelope" test is true if the specified part of the [SMTP] (or
   equivalent) envelope matches the specified key.  This specification
   defines the interpretation of the (case insensitive) "from" and "to"
   envelope-parts.  Additional envelope-parts may be defined by other
   extensions; implementations SHOULD consider unknown envelope parts an
   error."
   
    - Given the variables extension, sometimes the envelope parts aren't known until
      runtime. Will invalid ones abort the script? 
      [not checked (FIXME); will first be: ignore envelope part]

* RFC5229 (Variables): 6.  Implementation Limits
  "An implementation of this document MUST support at least 128 distinct
   variables. [...] Each variable MUST be able to hold at least 4000
   characters.  Attempts to set the variable to a value larger than what
   the implementation supports SHOULD be reported as an error at
   compile-time if possible.  If the attempt is discovered during run-
   time, the value SHOULD be truncated, and it MUST NOT be treated as an
   error."
    
    - Given the include extension, multiple scripts can be active at the same time. 
      If these limits on variables are interpreted on a per-script basis, the total 
      amount of memory a single user can claim greatly depends on the maximum depth 
      of the include tree. Should an overall global variables limit be inforced
      explicitly? How to resolve this at runtime? A fatal error with implicit keep?
      [currently not checked; my opinion is that this should be limited explicitly]

* RFC 5232 (Imapflags):
	This document does not mention how limits should be imposed on the maximum 
	number of set flags and the maximum length of a flag name. 
