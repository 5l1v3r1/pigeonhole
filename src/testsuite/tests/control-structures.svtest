require "vnd.dovecot.testsuite";

test_set "message" text:
From: stephan@rename-it.nl
To: test@dovecot.org
Subject: Test

Test!
.
;
/*
test "IF-true" {
	if true {
	} else {
		test_fail "executed wrong alternative";
	}
}

test "IF-false" {
	if false {
		test_fail "executed wrong alternative";
	}
}

test "ELSEIF-true" {
	if false {
		test_fail "executed wrong alternative (if)";
	} elsif true {
	} else {
		test_fail "executed wrong alternative (else)";	
	}
}

test "ELSEIF-false" {
	if false {
		test_fail "executed wrong alternative (if)";
	} elsif false {
		test_fail "executed wrong alternative (elsif)";	
	} else {
	}
}*/

test "IF-address-true" {
	if address :is "from" "stephan@rename-it.nl" {
	} else {
		test_fail "executed wrong alternative";
	}
}

/*
test "IF-address-false" {
	if address :is "from" "tss@iki.fi" {
		test_fail "executed wrong alternative";
	}
}

test "ELSEIF-address-true" {
	if address :is "from" "tss@iki.fi" {
		test_fail "executed wrong alternative (if)";
	} elsif address :is "from" "stephan@rename-it.nl" {
	} else {
		test_fail "executed wrong alternative (else)";	
	}
}

test "ELSEIF-address-false" {
	if address :is "from" "tss@iki.fi" {
		test_fail "executed wrong alternative (if)";
	} elsif address :is "to" "stephan@rename-it.nl" {
		test_fail "executed wrong alternative (elsif)";	
	} else {
	}
}

test "IF-nesting-static" {
	if true {
		if true {
			if false {
				test_fail "chose wrong outcome: true->true->false";
			} else {
			}
		} else {
			test_fail "chose wrong outcome: true->false";
		}
	} elsif true {
		if false {
			test_fail "chose wrong outcome: false->true->false";	
		} elsif true {
			test_fail "chose wrong outcome: false->true->true";
		}
	} else {
		test_fail "chose wrong outcome: false->false";
	}
}

test "ALLOF-ANYOF-static" {
	if allof ( true, true, true, true, anyof (false, false, true, false) ) {
		if anyof( allof(false, false), allof(false, true), allof(true, false) ) {
			test_fail "chose wrong outcome: true->true";
		} elsif allof( anyof(false, true), true, anyof(true, false), anyof(true, true)) {
			
		} else {
			test_fail "chose wrong outcome: true->false->false";			
		}
	} else {
		test_fail "chose wrong outcome: false";
	}
}

test "ALLOF-ANYOF-single" {
	# Static 
	if not allof ( true ) {
		test_fail "allof ( true ) evaluates to false";
	}

	if allof ( false ) {
		test_fail "allof ( false ) evaluates to true";
	}

	if not anyof ( true ) {
		test_fail "anyof ( true ) evaluates to false";
	}

	if anyof ( false ) {
		test_fail "anyof ( false ) evaluates to true";
	}	

	# Dynamic
	if not allof ( exists "subject" ) {
        test_fail "allof ( 'true' ) evaluates to false";
    }

    if allof ( exists "x-nonsense" ) {
        test_fail "allof ( 'false' ) evaluates to true";
    }

    if not anyof ( exists "subject" ) {
        test_fail "anyof ( 'true' ) evaluates to false";
    }

    if anyof ( exists "x-nonsense" ) {
        test_fail "anyof ( 'false' ) evaluates to true";
    }
}

test "STOP" {
	stop;
	test_fail "continued after stop";
}
*/
