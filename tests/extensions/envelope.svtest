require "vnd.dovecot.testsuite";

require "envelope";

test "Envelope - from empty" {
	/* Return_path: "" */

	test_set "envelope.from" "";

	if not envelope :all :is "from" "" {
		test_fail "failed to (:all :is)-match a \"\" return path";
	}

	if not envelope :all :contains "from" "" {
		test_fail "failed to (:all :contains)-match a \"\" return path";
	}

	if not envelope :domain :is "from" "" {
		test_fail "failed to (:domain :is)-match a \"\" return path";
	}

	if not envelope :domain :contains "from" "" {
		test_fail "failed to (:domain :contains)-match a \"\" return path";
	}

	/* Return path: <> */

	test_set "envelope.from" "<>";

	if not envelope :all :is "from" "" {
		test_fail "failed to (:all :is)-match a <> return path";
	}

	if not envelope :all :contains "from" "" {
		test_fail "failed to (:all :contains)-match a <> return path";
	}

	if not envelope :domain :is "from" "" {
		test_fail "failed to (:domain :is)-match a <> return path";
	}

	if not envelope :domain :contains "from" "" {
		test_fail "failed to (:domain :contains)-match a <> return path";
	}

	if envelope :all :is "from" "nico@vestingbar.nl" {
		test_fail "envelope test matches nonsense";
	}

	/* Forward path: <> */

    test_set "envelope.to" "<>";

    if envelope :all :is "to" "" {
        test_fail "successfully matched a <> forward path, which is wrong";
    }
}

test "Envelope - invalid paths" {
    /* Return_path: "hutsefluts" */

	test_set "envelope.from" "hutsefluts";
	test_set "envelope.to" "knurft";

	if not envelope :all :is "from" "hutsefluts" {
		test_fail ":all address part mangled syntactically incorrect reverse path";
	}

	if envelope :localpart :is "from" "hutsefluts" {
        test_fail ":localpart address part matched syntactically incorrect reverse path";
    }

	if envelope :domain :is "from" "hutsefluts" {
        test_fail ":domain address part matched syntactically incorrect reverse path";
    }

	if not envelope :all :is "to" "knurft" {
		test_fail ":all address part mangled syntactically incorrect forward path";
	}

	if envelope :localpart :is "to" "knurft" {
        test_fail ":localpart address part matched syntactically incorrect forward path";
    }

	if envelope :domain :is "to" "knurft" {
        test_fail ":domain address part matched syntactically incorrect forward path";
    }
}

